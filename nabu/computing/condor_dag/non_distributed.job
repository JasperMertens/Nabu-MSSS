# Normal execution
Universe         = vanilla
# need enough RAM to store the parameters
RequestMemory    = 15G
#number of GPUs equal to the number of workers
Request_GPUs      = 1
RequestCpus = 3
#request wall time
+RequestWalltime = 260064
#specify that the cuda capability should be at least 3.0 and set the memory
#requirement
Requirements = (CUDACapability >= 3.0)\
  && has_avx\
  &&(CUDAGlobalMemoryMb >= $(memory))\
  &&(machine =!= LastRemoteHost)\
  && (machine != "spchcl24.esat.kuleuven.be")\
  && (machine != "spchcl23.esat.kuleuven.be")\
  && (machine != "cancer.esat.kuleuven.be")\
  && (machine != "libra.esat.kuleuven.be")\
  && (machine != "virgo.esat.kuleuven.be")\
  && (machine != "iolite.esat.kuleuven.be")\
  && (machine != "leo.esat.kuleuven.be")\
  && (machine != "ulexite.esat.kuleuven.be")\
  && (machine != "topaz.esat.kuleuven.be")\
# machines below have connecting problems, add again when problems are solved\
  && (machine != "fluorite.esat.kuleuven.be")\
  && (machine != "kunzite.esat.kuleuven.be")\
  # && (machine != "malachite.esat.kuleuven.be")\
  # && (machine != "beryl.esat.kuleuven.be")\
  # && (machine != "larimar.esat.kuleuven.be")\
#  && (machine != "molder.esat.kuleuven.be")\
# machines below should be re-added \
#  && (machine != "andromeda.esat.kuleuven.be") \
# machines below are removed since using 8 cpus is faster\
  && (machine != "tiger.esat.kuleuven.be")\
#\
&& (machine != "molder.esat.kuleuven.be")
# && (machine != "spchcl21.esat.kuleuven.be")
  
  
#  && (machine != "andromeda.esat.kuleuven.be") \
#  && (machine != "hematite.esat.kuleuven.be")\
#  && (machine != "leo.esat.kuleuven.be")\
#  && (machine != "nickeline.esat.kuleuven.be")\
#  && (machine != "ricotta.esat.kuleuven.be")\
#  && (machine != "realgar.esat.kuleuven.be")\
#  && (machine != "pyrite.esat.kuleuven.be")\
#  && (machine != "cancer.esat.kuleuven.be")\
#  && (machine != "libra.esat.kuleuven.be")\
#  && (machine != "virgo.esat.kuleuven.be")\

#Specfy nice user behavior
NiceUser = true
#Send an email in case of an error
Notification = Error

initialdir = .

Arguments = "python -u $(script) --expdir=$(expdir)"
# This is the executable or script I want to run
executable = create_environment.sh
# executable = nabu/computing/condor/cr_env.sh

#Output of condors handling of the jobs, will be in 'initialdir'
Log          = $(expdir)/outputs/main.log
#Standard output of the 'executable', in 'initialdir'
Output       = $(expdir)/outputs/main.out
#Standard error of the 'executable', in 'initialdir'
Error        = $(expdir)/outputs/main.err

priority = $(condor_prio)

# Queue the job
Queue
